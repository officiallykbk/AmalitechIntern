openapi: 3.0.4
info:
  title:  ToDo Application 
  description: |-
    As a busy professional, 
    I want to create, manage, and track my daily tasks, 
    So that I can stay organized and improve my productivity.

    Some useful links:
    - [The ToDo repository](https://github.com/officiallykbk/AmalitechIntern.git)
  version: v0.1
    
servers:
  - url: http://localhost:3000
tags:
  - name: task
    description: Everything about tasks
paths:
  /task/:
    get:
      tags:
        - task
      summary: Get All existing todos
      responses:
        '200' :
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
            application/xml:
              schema:
                $ref: '#/components/schemas/task'
          

    post:
      tags:
        - task
      summary: Add a new todo.
      description: Add a new task to the store.
      operationId: addtask
      requestBody:
        description: Create a new task in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
          application/xml:
            schema:
              $ref: '#/components/schemas/task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
            application/xml:
              schema:
                $ref: '#/components/schemas/task'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - taskstore_auth:
            - write:tasks
            - read:tasks
  /task/{taskId}:
    get:
      tags:
        - task
      summary: Find task by ID.
      description: Returns a single task.
      operationId: gettaskById
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
            application/xml:
              schema:
                $ref: '#/components/schemas/task'
        '400':
          description: Invalid ID supplied
        '404':
          description: task not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - api_key: []
        - taskstore_auth:
            - write:tasks
            - read:tasks
    put:
      tags:
        - task
      summary: Update an existing todo.
      description: Update an existing task by Id.
      operationId: updatetask
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
            application/xml:
              schema:
                $ref: '#/components/schemas/task'
        '400':
          description: Invalid ID supplied
        '404':
          description: task not found
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - taskstore_auth:
            - write:tasks
            - read:tasks
    delete:
      tags:
        - task
      summary: Deletes a task.
      description: Delete a task.
      operationId: deletetask
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: taskId
          in: path
          description: task id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: task deleted
        '400':
          description: Invalid task value
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - taskstore_auth:
            - write:tasks
            - read:tasks
  /task/completion/{taskId}:
    put:
      tags:
        - task
      summary: Change tasks status.
      description: Multiple status values can be provided with comma separated strings.
      operationId: changetasksStatus
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/task'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/task'
        '400':
          description: Invalid status value
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - taskstore_auth:
            - write:tasks
            - read:tasks

components:
  schemas:
    task:
      required:
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: Read Book
        description:
          type: string
          example: Before i sleep i need to read 2 books
        due_date:
          type: string
          format: date
          example: 2025-12-12
        priority:
          type: string
          description: Urgency of task completion
          enum:
            - low
            - medium
            - high
        completion_status:
          type: boolean
          description: is the Todo complete?
          example: false
      xml:
        name: task
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  requestBodies:
    task:
      description: task object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task'
        application/xml:
          schema:
            $ref: '#/components/schemas/task'
    
  securitySchemes:
    taskstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://taskstore3.swagger.io/oauth/authorize
          scopes:
            "write:tasks": modify tasks in your account
            "read:tasks": read your tasks
    api_key:
      type: apiKey
      name: api_key
      in: header